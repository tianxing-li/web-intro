<!DOCTYPE html> — 文档类型。在 HTML 刚刚出现的时期里（大约是1991/2 年），文档类型是用来链接一些好的 HTML 应该遵守的规则，有点像自动校正等。然而现在已经没有人关心这些，只是因为历史原因必须它必须包含在代码中。现在你只需要知道这些就可以。
<html></html> — <html> 元素。这个元素包含了整个页面的内容，有时也被称作根元素。
	<head></head> — <head> 元素。这个元素可以包含你想添加的所有内容，但是不会被用户所看到。这里面包括像想被搜索引擎搜索到的关键字（keywords）和页面描述，CSS 样式表和字符编码声明等。
		
		<meta charset="utf-8"> — 这个元素指定了你的文档需要使用的字符编码是 UTF-8 ，它包括了非常多人类已知语言的字符。基本上 UTF-8 可以处理任何文本内容。我们没有任何理由不去设定字符编码，而且也可以避免以后可能出现的问题。
		许多<meta> 元素包含了name 和 content 特性:
			name 特性指定了meta 元素的类型; 说明该元素包含了什么类型的信息。
			content 指定了实际的元数据内容。
				description也被使用在搜索引擎显示的结果页中
		几乎所有网站都会使用 CSS 让网页更加炫酷, 使用JavaScript让网页有交互功能, 它们分别使用 <link>元素以及 <script> 元素。
			 <link> 元素经常位于文档的头部，它有2个属性， rel="stylesheet"，表明这是文档的样式表，而 href,包含了样式表文件的路径
			 <script> 部分没必要非要放在文档头部; 实际上，把它放在文档的尾部（在 </body>标签之前）是一个更好的选择 ，这样可以确保在加载脚本之前浏览器已经解析了HTML内容（如果脚本加载某个不存在的元素，浏览器会报错）。
			 	注： < script >元素看起来像一个空元素，但它并不是，因此需要一个结束标记。您还可以选择将脚本放入< script >元素中，而不是指向外部脚本文件
			 </script>

		最后，值得一提的是你可以（而且确实应该）为你的站点设定语言， 这个可以通过添加lang属性到HTML开始标签中来实现 (参考 meta-example.html)，如下所示：<html lang="en-US">
		这在很多方面都很有用。如果你的HTML文档的语言设置好了，那么你的HTML文档就会被搜索引擎更有效地索引 (例如，允许它在特定于语言的结果中正确显示),对于那些使用屏幕阅读器的视障人士也很有用(比如, 法语和英语中都有“six”这个单词，但是发音却完全不同)。

		你还可以将文档的分段设置为不同的语言。例如， 我们可以把日语部分设置为日语， 如下所示：

		<p>Japanese example: <span lang="jp">ご飯が熱い。</span>.</p>
		这些codes根据 ISO 639-1 标准定义的. 你可以在Language tags in HTML and XML找到更多相关的。
		<em>（emphasis）元素来标记强调

		<title></title> — <title> 元素。这个元素设置了页面的标题，标题显示在浏览器标签页上，而且在你将网页添加到收藏夹或喜爱中时将作为默认名称。
	<body></body>元素。这个元素包含了你想让用户在访问你的页面时看到的内容，不管是文本，图像，视频，游戏，可播放的音轨或其他内容。
		HTML 包括六个级别的标题， <h1>–<h6>
		只对每个页面使用一次<h1> — 这是顶级标题，所有其他标题位于层次结构中的下方。
		<p>
		<a>
			href 目标,链接指向的网址
			title 补充有用信息
			超链接可以链接到html文档的特定部分（被称为文档片段），而不仅仅是文件的顶部。要做到这一点你必须首先分配一个id属性的元素到链接。
			<h2 id="Mailing_address">Mailing address</h2>
			链接到那个特定的id，您可以在URL的结尾包含它，前面是一个井号（#）
			<p>Want to write us a letter? Use our <a href="contacts.html#Mailing_address">mailing address</a>.</p>
			甚至可以用它自己的文档片段参考链接到同一份文件的另一部分：
			<p>The <a href="#Mailing_address">company mailing address</a> can be found at the bottom of this page.</p>
			<a href="mailto:nowhere@mozilla.org">Send email to nowhere</a>
			最常用的是主题(subject)、抄送(cc)和主体(body),(这不是一个真正的头字段，但允许您为新邮件指定一个短内容消息)
			<a href="mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email &amp;body=The%20body%20of%20the%20email">
  Send mail with cc, bcc, subject and body
</a>
		<img>
		<ul>无序列表<li></li></ul>
		<ol>有序列表<li></li></ol>
		描述列表 (description list) 
		<dl>
			<dt>description term元素</dt>
			<dd>description description元素</dd>
		</dl>
		<i> 被用来传达传统上用斜体表达的意义：外国文字，分类名称，技术术语，一种思想……
		<b> 被用来传达传统上用粗体表达的意义：关键字，产品名称，引导句……
		<u> 被用来传达传统上用下划线表达的意义：专有名词，拼写错误……

无论你用了多少空白(包括空白字符，包括换行),当渲染这些代码的时候，HTML解释器会将连续出现的空白字符减少为一个单独的空格符。

HTML注释，特殊的记号<!--和-->

选择器
元素选择器（有时也称作标签或类型选择器）: p  <p>
标识（ID）选择器: #my-id  <p id="my-id"> or <a id="my-id">
类别选择器:.my-class  <p class="my-class"> or <a class="my-class">
属性选择器: img[src]  选择 <img src="myimage.png"> 而不是 <img>
伪类选择器: a:hover  选择 <a>, 但是只在鼠标悬停在链接上时

内边距（padding），围绕着内容的空间（比如围绕段落的空间）
边框（border），紧接着内边距的实体线段
外边距（margin），围绕元素外部的空间

text-shadow
  第一个像素值设置了水平对齐——它的横向偏移；一个负值会导致向左偏移。
  第二个像素值设置了垂直对齐——它的纵向偏移；一个负值会导致向上偏移。
  第三个像素值设置了阴影的模糊半径——越大的值会产生越模糊的阴影。
  第四个值设置了阴影的基色。

 <body> 元素是块级元素，意味着它占据了页面的空间并且能够赋予外边距和其他改变间距的值。与之对应的是行内元素，意味着它不能。所以为了使图像有外边距，我们必须使用 display: block 给予其块级行为。


将 <script> 元素放在 HTML 文件底部，是因为浏览器会按照代码在文件中的顺序解析 HTML。如果应该要影响下面 HTML 的 JavaScript 先被加载，那么它可能由于 HTML 尚未被加载而失效。所以将 JavaScript 代码放在靠近 HTML 页面底部的位置是通常最好的选择。

相等 ===
不等 !==