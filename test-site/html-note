<!DOCTYPE html> — 文档类型。在 HTML 刚刚出现的时期里（大约是1991/2 年），文档类型是用来链接一些好的 HTML 应该遵守的规则，有点像自动校正等。然而现在已经没有人关心这些，只是因为历史原因必须它必须包含在代码中。现在你只需要知道这些就可以。
<html></html> — <html> 元素。这个元素包含了整个页面的内容，有时也被称作根元素。
	<head></head> — <head> 元素。这个元素可以包含你想添加的所有内容，但是不会被用户所看到。这里面包括像想被搜索引擎搜索到的关键字（keywords）和页面描述，CSS 样式表和字符编码声明等。
		HTML 包括六个级别的标题， <h1>–<h6>
		<meta charset="utf-8"> — 这个元素指定了你的文档需要使用的字符编码是 UTF-8 ，它包括了非常多人类已知语言的字符。基本上 UTF-8 可以处理任何文本内容。我们没有任何理由不去设定字符编码，而且也可以避免以后可能出现的问题。
		<title></title> — <title> 元素。这个元素设置了页面的标题，标题显示在浏览器标签页上，而且在你将网页添加到收藏夹或喜爱中时将作为默认名称。
	<body></body> — <body> 元素。这个元素包含了你想让用户在访问你的页面时看到的内容，不管是文本，图像，视频，游戏，可播放的音轨或其他内容。
		<p>
		<img>
		<ul>无序列表
		<ol>有序列表

无论你用了多少空白(包括空白字符，包括换行),当渲染这些代码的时候，HTML解释器会将连续出现的空白字符减少为一个单独的空格符。

HTML注释，特殊的记号<!--和-->

选择器
元素选择器（有时也称作标签或类型选择器）: p  <p>
标识（ID）选择器: #my-id  <p id="my-id"> or <a id="my-id">
类别选择器:.my-class  <p class="my-class"> or <a class="my-class">
属性选择器: img[src]  选择 <img src="myimage.png"> 而不是 <img>
伪类选择器: a:hover  选择 <a>, 但是只在鼠标悬停在链接上时

内边距（padding），围绕着内容的空间（比如围绕段落的空间）
边框（border），紧接着内边距的实体线段
外边距（margin），围绕元素外部的空间

text-shadow
  第一个像素值设置了水平对齐——它的横向偏移；一个负值会导致向左偏移。
  第二个像素值设置了垂直对齐——它的纵向偏移；一个负值会导致向上偏移。
  第三个像素值设置了阴影的模糊半径——越大的值会产生越模糊的阴影。
  第四个值设置了阴影的基色。

 <body> 元素是块级元素，意味着它占据了页面的空间并且能够赋予外边距和其他改变间距的值。与之对应的是行内元素，意味着它不能。所以为了使图像有外边距，我们必须使用 display: block 给予其块级行为。


将 <script> 元素放在 HTML 文件底部，是因为浏览器会按照代码在文件中的顺序解析 HTML。如果应该要影响下面 HTML 的 JavaScript 先被加载，那么它可能由于 HTML 尚未被加载而失效。所以将 JavaScript 代码放在靠近 HTML 页面底部的位置是通常最好的选择。

相等 ===
不等 !==